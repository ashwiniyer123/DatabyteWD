

<!DOCTYPE html>
<html lang="en">

<!--
     
    I have tried to incorporate required features in the game, however I could not complete it on time. 

    There is a 4x4 card matrix. The back side is visible and it is light blue in color.
    On clicking, the cards rotate, and one of the colors - yellow/red/blue/green - is displayed.
    Additional JS code is required to match if the colors shown by 2 cards selected is same and to increase the score.
    Timer of 30sec is provided. Once it reaches 0, it pauses for a second and closes the window.

  -->


<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .container {
            width: 450px;
            height: 680px;
            border: 2px solid red;
            display: flex;
            flex-wrap: wrap;
        }

        .card{
            border: 2px solid blue;
            width: 93.75px;
            height: 150px;

            border-radius: 10px;

            margin: 5px;
            box-shadow: 5px 5px rgb(234, 212, 247);
            perspective: 800px;
            cursor: pointer;
            transition: all 0.5s ease-in;
            transform-style: preserve-3d;
            transition: transform 0.5s;
        }

        .frontside,
        .backside {
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2em;

            border-radius: 10px;
            position: absolute;
            top: 0;
            left: 0;
            backface-visibility: hidden;
          
        }

        .card:hover {
            transform: scale(1.1);
        }



       
        .card:active {
            transform: rotateY(180deg);
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="card" id="1">
            <div class="frontside"></div>
            <div class="backside">


            </div>
        </div>
        <div class="card" id="2">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>
        <div class="card" id="3">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>
        <div class="card" id="4">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>
        <div class="card" id="5">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>
        <div class="card" id="6">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>
        <div class="card" id="7">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>
        <div class="card" id="8">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>
        <div class="card" id="9">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>
        <div class="card" id="10">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>
        <div class="card" id="11">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>
        <div class="card" id="12">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>
        <div class="card" id="13">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>
        <div class="card" id="14">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>
        <div class="card" id="15">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>
        <div class="card" id="16">
            <div class="frontside"></div>
            <div class="backside"> </div>
        </div>

    </div>

    <script>
       const cards = document.querySelectorAll('.card');

cards.forEach(card => {
    const initialColor = 'lightblue';
    card.style.backgroundColor = initialColor;

    card.addEventListener('click', () => {
        card.classList.toggle('flipped');
        if (card.classList.contains('flipped')) {
            const colors = ['red', 'blue', 'yellow', 'green'];
            const randomColor = colors[Math.floor(Math.random() * colors.length)];
            card.style.backgroundColor = randomColor;
        } else {
            card.style.backgroundColor = initialColor;
        }
    });
});

function startTimer() {
  var count = 30;
  var timerCountElement = document.createElement('h3');
  timerCountElement.textContent = count+` seconds left`;
  document.body.appendChild(timerCountElement);

  var timer = setInterval(function() {
    count--;
    timerCountElement.textContent = count+` seconds left`;

    if (count <= 0) {
      clearInterval(timer);
      timerCountElement.textContent = 'Game Time Over!';
      setTimeout(function() {
        window.close();
      }, 1000);
    
    }
  }, 1000); 
}

startTimer(); 


    </script>


</body>

</html>
